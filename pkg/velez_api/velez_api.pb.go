// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: velez_api/velez_api.proto

package velez_api

import (
	_ "go.redsock.ru/protoc-gen-npm/npmplugin"
	matreshka_api "go.vervstack.ru/matreshka/pkg/matreshka_api"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RestartPolicyType int32

const (
	RestartPolicyType_unless_stopped RestartPolicyType = 0
	RestartPolicyType_no             RestartPolicyType = 1
	RestartPolicyType_always         RestartPolicyType = 2
	RestartPolicyType_on_failure     RestartPolicyType = 3
)

// Enum value maps for RestartPolicyType.
var (
	RestartPolicyType_name = map[int32]string{
		0: "unless_stopped",
		1: "no",
		2: "always",
		3: "on_failure",
	}
	RestartPolicyType_value = map[string]int32{
		"unless_stopped": 0,
		"no":             1,
		"always":         2,
		"on_failure":     3,
	}
)

func (x RestartPolicyType) Enum() *RestartPolicyType {
	p := new(RestartPolicyType)
	*p = x
	return p
}

func (x RestartPolicyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RestartPolicyType) Descriptor() protoreflect.EnumDescriptor {
	return file_velez_api_velez_api_proto_enumTypes[0].Descriptor()
}

func (RestartPolicyType) Type() protoreflect.EnumType {
	return &file_velez_api_velez_api_proto_enumTypes[0]
}

func (x RestartPolicyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RestartPolicyType.Descriptor instead.
func (RestartPolicyType) EnumDescriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{0}
}

type Port_Protocol int32

const (
	Port_unknown Port_Protocol = 0
	Port_tcp     Port_Protocol = 1
	Port_udp     Port_Protocol = 2
)

// Enum value maps for Port_Protocol.
var (
	Port_Protocol_name = map[int32]string{
		0: "unknown",
		1: "tcp",
		2: "udp",
	}
	Port_Protocol_value = map[string]int32{
		"unknown": 0,
		"tcp":     1,
		"udp":     2,
	}
)

func (x Port_Protocol) Enum() *Port_Protocol {
	p := new(Port_Protocol)
	*p = x
	return p
}

func (x Port_Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Port_Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_velez_api_velez_api_proto_enumTypes[1].Descriptor()
}

func (Port_Protocol) Type() protoreflect.EnumType {
	return &file_velez_api_velez_api_proto_enumTypes[1]
}

func (x Port_Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Port_Protocol.Descriptor instead.
func (Port_Protocol) EnumDescriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{1, 0}
}

type Smerd_Status int32

const (
	Smerd_unknown    Smerd_Status = 0
	Smerd_created    Smerd_Status = 1
	Smerd_restarting Smerd_Status = 2
	Smerd_running    Smerd_Status = 3
	Smerd_removing   Smerd_Status = 4
	Smerd_paused     Smerd_Status = 5
	Smerd_exited     Smerd_Status = 6
	Smerd_dead       Smerd_Status = 7
)

// Enum value maps for Smerd_Status.
var (
	Smerd_Status_name = map[int32]string{
		0: "unknown",
		1: "created",
		2: "restarting",
		3: "running",
		4: "removing",
		5: "paused",
		6: "exited",
		7: "dead",
	}
	Smerd_Status_value = map[string]int32{
		"unknown":    0,
		"created":    1,
		"restarting": 2,
		"running":    3,
		"removing":   4,
		"paused":     5,
		"exited":     6,
		"dead":       7,
	}
)

func (x Smerd_Status) Enum() *Smerd_Status {
	p := new(Smerd_Status)
	*p = x
	return p
}

func (x Smerd_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Smerd_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_velez_api_velez_api_proto_enumTypes[2].Descriptor()
}

func (Smerd_Status) Type() protoreflect.EnumType {
	return &file_velez_api_velez_api_proto_enumTypes[2]
}

func (x Smerd_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Smerd_Status.Descriptor instead.
func (Smerd_Status) EnumDescriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{6, 0}
}

type Version struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_velez_api_velez_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{0}
}

type Port struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ServicePortNumber uint32                 `protobuf:"varint,1,opt,name=service_port_number,json=servicePortNumber,proto3" json:"service_port_number,omitempty"`
	Protocol          Port_Protocol          `protobuf:"varint,2,opt,name=protocol,proto3,enum=velez_api.Port_Protocol" json:"protocol,omitempty"`
	ExposedTo         *uint32                `protobuf:"varint,3,opt,name=exposed_to,json=exposedTo,proto3,oneof" json:"exposed_to,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Port) Reset() {
	*x = Port{}
	mi := &file_velez_api_velez_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{1}
}

func (x *Port) GetServicePortNumber() uint32 {
	if x != nil {
		return x.ServicePortNumber
	}
	return 0
}

func (x *Port) GetProtocol() Port_Protocol {
	if x != nil {
		return x.Protocol
	}
	return Port_unknown
}

func (x *Port) GetExposedTo() uint32 {
	if x != nil && x.ExposedTo != nil {
		return *x.ExposedTo
	}
	return 0
}

type Volume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeName    string                 `protobuf:"bytes,1,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	ContainerPath string                 `protobuf:"bytes,2,opt,name=container_path,json=containerPath,proto3" json:"container_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Volume) Reset() {
	*x = Volume{}
	mi := &file_velez_api_velez_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{2}
}

func (x *Volume) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

func (x *Volume) GetContainerPath() string {
	if x != nil {
		return x.ContainerPath
	}
	return ""
}

type Bind struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostPath      string                 `protobuf:"bytes,1,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	ContainerPath string                 `protobuf:"bytes,2,opt,name=container_path,json=containerPath,proto3" json:"container_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bind) Reset() {
	*x = Bind{}
	mi := &file_velez_api_velez_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bind) ProtoMessage() {}

func (x *Bind) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bind.ProtoReflect.Descriptor instead.
func (*Bind) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{3}
}

func (x *Bind) GetHostPath() string {
	if x != nil {
		return x.HostPath
	}
	return ""
}

func (x *Bind) GetContainerPath() string {
	if x != nil {
		return x.ContainerPath
	}
	return ""
}

type NetworkBind struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkName   string                 `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	Aliases       []string               `protobuf:"bytes,2,rep,name=aliases,proto3" json:"aliases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkBind) Reset() {
	*x = NetworkBind{}
	mi := &file_velez_api_velez_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkBind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkBind) ProtoMessage() {}

func (x *NetworkBind) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkBind.ProtoReflect.Descriptor instead.
func (*NetworkBind) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{4}
}

func (x *NetworkBind) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *NetworkBind) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tags          []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_velez_api_velez_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{5}
}

func (x *Image) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Image) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Image) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Smerd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ImageName     string                 `protobuf:"bytes,3,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	Ports         []*Port                `protobuf:"bytes,4,rep,name=ports,proto3" json:"ports,omitempty"`
	Volumes       []*Volume              `protobuf:"bytes,5,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Status        Smerd_Status           `protobuf:"varint,6,opt,name=status,proto3,enum=velez_api.Smerd_Status" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Networks      []*NetworkBind         `protobuf:"bytes,8,rep,name=networks,proto3" json:"networks,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Env           map[string]string      `protobuf:"bytes,10,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Binds         []*Bind                `protobuf:"bytes,11,rep,name=binds,proto3" json:"binds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Smerd) Reset() {
	*x = Smerd{}
	mi := &file_velez_api_velez_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Smerd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Smerd) ProtoMessage() {}

func (x *Smerd) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Smerd.ProtoReflect.Descriptor instead.
func (*Smerd) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{6}
}

func (x *Smerd) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Smerd) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Smerd) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *Smerd) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Smerd) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *Smerd) GetStatus() Smerd_Status {
	if x != nil {
		return x.Status
	}
	return Smerd_unknown
}

func (x *Smerd) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Smerd) GetNetworks() []*NetworkBind {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *Smerd) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Smerd) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Smerd) GetBinds() []*Bind {
	if x != nil {
		return x.Binds
	}
	return nil
}

type Container struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Container) Reset() {
	*x = Container{}
	mi := &file_velez_api_velez_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{7}
}

type CreateSmerd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSmerd) Reset() {
	*x = CreateSmerd{}
	mi := &file_velez_api_velez_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSmerd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSmerd) ProtoMessage() {}

func (x *CreateSmerd) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSmerd.ProtoReflect.Descriptor instead.
func (*CreateSmerd) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{8}
}

type ListSmerds struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSmerds) Reset() {
	*x = ListSmerds{}
	mi := &file_velez_api_velez_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSmerds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSmerds) ProtoMessage() {}

func (x *ListSmerds) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSmerds.ProtoReflect.Descriptor instead.
func (*ListSmerds) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{9}
}

type DropSmerd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropSmerd) Reset() {
	*x = DropSmerd{}
	mi := &file_velez_api_velez_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropSmerd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropSmerd) ProtoMessage() {}

func (x *DropSmerd) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropSmerd.ProtoReflect.Descriptor instead.
func (*DropSmerd) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{10}
}

type GetHardware struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHardware) Reset() {
	*x = GetHardware{}
	mi := &file_velez_api_velez_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHardware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHardware) ProtoMessage() {}

func (x *GetHardware) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHardware.ProtoReflect.Descriptor instead.
func (*GetHardware) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{11}
}

type AssembleConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssembleConfig) Reset() {
	*x = AssembleConfig{}
	mi := &file_velez_api_velez_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssembleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssembleConfig) ProtoMessage() {}

func (x *AssembleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssembleConfig.ProtoReflect.Descriptor instead.
func (*AssembleConfig) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{12}
}

type UpgradeSmerd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeSmerd) Reset() {
	*x = UpgradeSmerd{}
	mi := &file_velez_api_velez_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeSmerd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeSmerd) ProtoMessage() {}

func (x *UpgradeSmerd) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeSmerd.ProtoReflect.Descriptor instead.
func (*UpgradeSmerd) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{13}
}

type RestartPolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          RestartPolicyType      `protobuf:"varint,1,opt,name=type,proto3,enum=velez_api.RestartPolicyType" json:"type,omitempty"`
	FailureCount  *uint32                `protobuf:"varint,2,opt,name=FailureCount,proto3,oneof" json:"FailureCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartPolicy) Reset() {
	*x = RestartPolicy{}
	mi := &file_velez_api_velez_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartPolicy) ProtoMessage() {}

func (x *RestartPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartPolicy.ProtoReflect.Descriptor instead.
func (*RestartPolicy) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{14}
}

func (x *RestartPolicy) GetType() RestartPolicyType {
	if x != nil {
		return x.Type
	}
	return RestartPolicyType_unless_stopped
}

func (x *RestartPolicy) GetFailureCount() uint32 {
	if x != nil && x.FailureCount != nil {
		return *x.FailureCount
	}
	return 0
}

type MatreshkaConfigSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of config. By default velez will try to guess config by
	// indirect signs such as (no priority)
	//   - special MATRESHKA_CONFIG tags
	//   - image (e.g. postgres, angie and etc)
	//   - smerd's name (starting with special prefix)
	ConfigName *string `protobuf:"bytes,1,opt,name=config_name,json=configName,proto3,oneof" json:"config_name,omitempty"`
	// Version to load into smerd. By default - master
	ConfigVersion *string `protobuf:"bytes,2,opt,name=config_version,json=configVersion,proto3,oneof" json:"config_version,omitempty"`
	// Format of config. Different default for different types
	// e.g
	//   - verv - sets config as environment variables
	//   - pg - writes to a config file
	//
	// general rule - if target_path is not set -> it's a environment variables
	ConfigFormat *matreshka_api.Format `protobuf:"varint,3,opt,name=config_format,json=configFormat,proto3,enum=matreshka_api.Format,oneof" json:"config_format,omitempty"`
	// target path of config.
	//
	//	If set and has .yaml extension - writes yaml file at path
	//
	//	If not set - writes config as an environment variables
	SystemPath    *string `protobuf:"bytes,4,opt,name=system_path,json=systemPath,proto3,oneof" json:"system_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatreshkaConfigSpec) Reset() {
	*x = MatreshkaConfigSpec{}
	mi := &file_velez_api_velez_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatreshkaConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatreshkaConfigSpec) ProtoMessage() {}

func (x *MatreshkaConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatreshkaConfigSpec.ProtoReflect.Descriptor instead.
func (*MatreshkaConfigSpec) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{15}
}

func (x *MatreshkaConfigSpec) GetConfigName() string {
	if x != nil && x.ConfigName != nil {
		return *x.ConfigName
	}
	return ""
}

func (x *MatreshkaConfigSpec) GetConfigVersion() string {
	if x != nil && x.ConfigVersion != nil {
		return *x.ConfigVersion
	}
	return ""
}

func (x *MatreshkaConfigSpec) GetConfigFormat() matreshka_api.Format {
	if x != nil && x.ConfigFormat != nil {
		return *x.ConfigFormat
	}
	return matreshka_api.Format(0)
}

func (x *MatreshkaConfigSpec) GetSystemPath() string {
	if x != nil && x.SystemPath != nil {
		return *x.SystemPath
	}
	return ""
}

type Version_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version_Request) Reset() {
	*x = Version_Request{}
	mi := &file_velez_api_velez_api_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version_Request) ProtoMessage() {}

func (x *Version_Request) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version_Request.ProtoReflect.Descriptor instead.
func (*Version_Request) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{0, 0}
}

type Version_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version_Response) Reset() {
	*x = Version_Response{}
	mi := &file_velez_api_velez_api_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version_Response) ProtoMessage() {}

func (x *Version_Response) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version_Response.ProtoReflect.Descriptor instead.
func (*Version_Response) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Version_Response) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Container_Hardware struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuAmount     *float32               `protobuf:"fixed32,1,opt,name=cpu_amount,json=cpuAmount,proto3,oneof" json:"cpu_amount,omitempty"`
	RamMb         *uint32                `protobuf:"varint,2,opt,name=ram_mb,json=ramMb,proto3,oneof" json:"ram_mb,omitempty"`
	MemorySwapMb  *uint32                `protobuf:"varint,3,opt,name=memory_swap_mb,json=memorySwapMb,proto3,oneof" json:"memory_swap_mb,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Container_Hardware) Reset() {
	*x = Container_Hardware{}
	mi := &file_velez_api_velez_api_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container_Hardware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container_Hardware) ProtoMessage() {}

func (x *Container_Hardware) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container_Hardware.ProtoReflect.Descriptor instead.
func (*Container_Hardware) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Container_Hardware) GetCpuAmount() float32 {
	if x != nil && x.CpuAmount != nil {
		return *x.CpuAmount
	}
	return 0
}

func (x *Container_Hardware) GetRamMb() uint32 {
	if x != nil && x.RamMb != nil {
		return *x.RamMb
	}
	return 0
}

func (x *Container_Hardware) GetMemorySwapMb() uint32 {
	if x != nil && x.MemorySwapMb != nil {
		return *x.MemorySwapMb
	}
	return 0
}

type Container_Settings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ports         []*Port                `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
	Network       []*NetworkBind         `protobuf:"bytes,2,rep,name=network,proto3" json:"network,omitempty"`
	Volumes       []*Volume              `protobuf:"bytes,3,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Binds         []*Bind                `protobuf:"bytes,4,rep,name=binds,proto3" json:"binds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Container_Settings) Reset() {
	*x = Container_Settings{}
	mi := &file_velez_api_velez_api_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container_Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container_Settings) ProtoMessage() {}

func (x *Container_Settings) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container_Settings.ProtoReflect.Descriptor instead.
func (*Container_Settings) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{7, 1}
}

func (x *Container_Settings) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Container_Settings) GetNetwork() []*NetworkBind {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *Container_Settings) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *Container_Settings) GetBinds() []*Bind {
	if x != nil {
		return x.Binds
	}
	return nil
}

type Container_Healthcheck struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// if command is not presented,
	// velez will simply
	// wait "retires" times for "interval_second" seconds each time,
	// until container get status Running
	Command        *string `protobuf:"bytes,1,opt,name=command,proto3,oneof" json:"command,omitempty"`
	IntervalSecond uint32  `protobuf:"varint,2,opt,name=interval_second,json=intervalSecond,proto3" json:"interval_second,omitempty"`
	TimeoutSecond  *uint32 `protobuf:"varint,3,opt,name=timeout_second,json=timeoutSecond,proto3,oneof" json:"timeout_second,omitempty"`
	Retries        uint32  `protobuf:"varint,4,opt,name=retries,proto3" json:"retries,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Container_Healthcheck) Reset() {
	*x = Container_Healthcheck{}
	mi := &file_velez_api_velez_api_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container_Healthcheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container_Healthcheck) ProtoMessage() {}

func (x *Container_Healthcheck) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container_Healthcheck.ProtoReflect.Descriptor instead.
func (*Container_Healthcheck) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{7, 2}
}

func (x *Container_Healthcheck) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *Container_Healthcheck) GetIntervalSecond() uint32 {
	if x != nil {
		return x.IntervalSecond
	}
	return 0
}

func (x *Container_Healthcheck) GetTimeoutSecond() uint32 {
	if x != nil && x.TimeoutSecond != nil {
		return *x.TimeoutSecond
	}
	return 0
}

func (x *Container_Healthcheck) GetRetries() uint32 {
	if x != nil {
		return x.Retries
	}
	return 0
}

type CreateSmerd_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ImageName     string                 `protobuf:"bytes,2,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	Hardware      *Container_Hardware    `protobuf:"bytes,3,opt,name=hardware,proto3,oneof" json:"hardware,omitempty"`
	Settings      *Container_Settings    `protobuf:"bytes,4,opt,name=settings,proto3,oneof" json:"settings,omitempty"`
	Command       *string                `protobuf:"bytes,5,opt,name=command,proto3,oneof" json:"command,omitempty"`
	Env           map[string]string      `protobuf:"bytes,6,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Healthcheck   *Container_Healthcheck `protobuf:"bytes,7,opt,name=healthcheck,proto3,oneof" json:"healthcheck,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IgnoreConfig  bool                   `protobuf:"varint,9,opt,name=ignore_config,json=ignoreConfig,proto3" json:"ignore_config,omitempty"`
	UseImagePorts bool                   `protobuf:"varint,10,opt,name=use_image_ports,json=useImagePorts,proto3" json:"use_image_ports,omitempty"`
	ConfigVersion *string                `protobuf:"bytes,11,opt,name=config_version,json=configVersion,proto3,oneof" json:"config_version,omitempty"`
	// not implemented
	AutoUpgrade   bool                 `protobuf:"varint,12,opt,name=auto_upgrade,json=autoUpgrade,proto3" json:"auto_upgrade,omitempty"`
	Restart       *RestartPolicy       `protobuf:"bytes,13,opt,name=restart,proto3" json:"restart,omitempty"`
	Config        *MatreshkaConfigSpec `protobuf:"bytes,14,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSmerd_Request) Reset() {
	*x = CreateSmerd_Request{}
	mi := &file_velez_api_velez_api_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSmerd_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSmerd_Request) ProtoMessage() {}

func (x *CreateSmerd_Request) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSmerd_Request.ProtoReflect.Descriptor instead.
func (*CreateSmerd_Request) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CreateSmerd_Request) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSmerd_Request) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *CreateSmerd_Request) GetHardware() *Container_Hardware {
	if x != nil {
		return x.Hardware
	}
	return nil
}

func (x *CreateSmerd_Request) GetSettings() *Container_Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *CreateSmerd_Request) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *CreateSmerd_Request) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *CreateSmerd_Request) GetHealthcheck() *Container_Healthcheck {
	if x != nil {
		return x.Healthcheck
	}
	return nil
}

func (x *CreateSmerd_Request) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateSmerd_Request) GetIgnoreConfig() bool {
	if x != nil {
		return x.IgnoreConfig
	}
	return false
}

func (x *CreateSmerd_Request) GetUseImagePorts() bool {
	if x != nil {
		return x.UseImagePorts
	}
	return false
}

func (x *CreateSmerd_Request) GetConfigVersion() string {
	if x != nil && x.ConfigVersion != nil {
		return *x.ConfigVersion
	}
	return ""
}

func (x *CreateSmerd_Request) GetAutoUpgrade() bool {
	if x != nil {
		return x.AutoUpgrade
	}
	return false
}

func (x *CreateSmerd_Request) GetRestart() *RestartPolicy {
	if x != nil {
		return x.Restart
	}
	return nil
}

func (x *CreateSmerd_Request) GetConfig() *MatreshkaConfigSpec {
	if x != nil {
		return x.Config
	}
	return nil
}

type ListSmerds_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         *uint32                `protobuf:"varint,1,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Id            *string                `protobuf:"bytes,3,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Label         map[string]string      `protobuf:"bytes,4,rep,name=label,proto3" json:"label,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSmerds_Request) Reset() {
	*x = ListSmerds_Request{}
	mi := &file_velez_api_velez_api_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSmerds_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSmerds_Request) ProtoMessage() {}

func (x *ListSmerds_Request) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSmerds_Request.ProtoReflect.Descriptor instead.
func (*ListSmerds_Request) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListSmerds_Request) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListSmerds_Request) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ListSmerds_Request) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ListSmerds_Request) GetLabel() map[string]string {
	if x != nil {
		return x.Label
	}
	return nil
}

type ListSmerds_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Smerds        []*Smerd               `protobuf:"bytes,1,rep,name=smerds,proto3" json:"smerds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSmerds_Response) Reset() {
	*x = ListSmerds_Response{}
	mi := &file_velez_api_velez_api_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSmerds_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSmerds_Response) ProtoMessage() {}

func (x *ListSmerds_Response) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSmerds_Response.ProtoReflect.Descriptor instead.
func (*ListSmerds_Response) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{9, 1}
}

func (x *ListSmerds_Response) GetSmerds() []*Smerd {
	if x != nil {
		return x.Smerds
	}
	return nil
}

type DropSmerd_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuids         []string               `protobuf:"bytes,1,rep,name=uuids,proto3" json:"uuids,omitempty"`
	Name          []string               `protobuf:"bytes,2,rep,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropSmerd_Request) Reset() {
	*x = DropSmerd_Request{}
	mi := &file_velez_api_velez_api_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropSmerd_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropSmerd_Request) ProtoMessage() {}

func (x *DropSmerd_Request) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropSmerd_Request.ProtoReflect.Descriptor instead.
func (*DropSmerd_Request) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{10, 0}
}

func (x *DropSmerd_Request) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

func (x *DropSmerd_Request) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

type DropSmerd_Response struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Failed        []*DropSmerd_Response_Error `protobuf:"bytes,1,rep,name=failed,proto3" json:"failed,omitempty"`
	Successful    []string                    `protobuf:"bytes,2,rep,name=successful,proto3" json:"successful,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropSmerd_Response) Reset() {
	*x = DropSmerd_Response{}
	mi := &file_velez_api_velez_api_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropSmerd_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropSmerd_Response) ProtoMessage() {}

func (x *DropSmerd_Response) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropSmerd_Response.ProtoReflect.Descriptor instead.
func (*DropSmerd_Response) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{10, 1}
}

func (x *DropSmerd_Response) GetFailed() []*DropSmerd_Response_Error {
	if x != nil {
		return x.Failed
	}
	return nil
}

func (x *DropSmerd_Response) GetSuccessful() []string {
	if x != nil {
		return x.Successful
	}
	return nil
}

type DropSmerd_Response_Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Cause         string                 `protobuf:"bytes,2,opt,name=cause,proto3" json:"cause,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropSmerd_Response_Error) Reset() {
	*x = DropSmerd_Response_Error{}
	mi := &file_velez_api_velez_api_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropSmerd_Response_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropSmerd_Response_Error) ProtoMessage() {}

func (x *DropSmerd_Response_Error) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropSmerd_Response_Error.ProtoReflect.Descriptor instead.
func (*DropSmerd_Response_Error) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{10, 1, 0}
}

func (x *DropSmerd_Response_Error) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DropSmerd_Response_Error) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

type GetHardware_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHardware_Request) Reset() {
	*x = GetHardware_Request{}
	mi := &file_velez_api_velez_api_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHardware_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHardware_Request) ProtoMessage() {}

func (x *GetHardware_Request) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHardware_Request.ProtoReflect.Descriptor instead.
func (*GetHardware_Request) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{11, 0}
}

type GetHardware_Response struct {
	state          protoimpl.MessageState      `protogen:"open.v1"`
	Cpu            *GetHardware_Response_Value `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	DiskMem        *GetHardware_Response_Value `protobuf:"bytes,2,opt,name=disk_mem,json=diskMem,proto3" json:"disk_mem,omitempty"`
	Ram            *GetHardware_Response_Value `protobuf:"bytes,3,opt,name=ram,proto3" json:"ram,omitempty"`
	PortsAvailable []uint32                    `protobuf:"varint,4,rep,packed,name=ports_available,json=portsAvailable,proto3" json:"ports_available,omitempty"`
	PortsOccupied  []uint32                    `protobuf:"varint,5,rep,packed,name=ports_occupied,json=portsOccupied,proto3" json:"ports_occupied,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetHardware_Response) Reset() {
	*x = GetHardware_Response{}
	mi := &file_velez_api_velez_api_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHardware_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHardware_Response) ProtoMessage() {}

func (x *GetHardware_Response) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHardware_Response.ProtoReflect.Descriptor instead.
func (*GetHardware_Response) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{11, 1}
}

func (x *GetHardware_Response) GetCpu() *GetHardware_Response_Value {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *GetHardware_Response) GetDiskMem() *GetHardware_Response_Value {
	if x != nil {
		return x.DiskMem
	}
	return nil
}

func (x *GetHardware_Response) GetRam() *GetHardware_Response_Value {
	if x != nil {
		return x.Ram
	}
	return nil
}

func (x *GetHardware_Response) GetPortsAvailable() []uint32 {
	if x != nil {
		return x.PortsAvailable
	}
	return nil
}

func (x *GetHardware_Response) GetPortsOccupied() []uint32 {
	if x != nil {
		return x.PortsOccupied
	}
	return nil
}

type GetHardware_Response_Value struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Err           string                 `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHardware_Response_Value) Reset() {
	*x = GetHardware_Response_Value{}
	mi := &file_velez_api_velez_api_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHardware_Response_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHardware_Response_Value) ProtoMessage() {}

func (x *GetHardware_Response_Value) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHardware_Response_Value.ProtoReflect.Descriptor instead.
func (*GetHardware_Response_Value) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{11, 1, 0}
}

func (x *GetHardware_Response_Value) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetHardware_Response_Value) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type AssembleConfig_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageName     string                 `protobuf:"bytes,1,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	ServiceName   string                 `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssembleConfig_Request) Reset() {
	*x = AssembleConfig_Request{}
	mi := &file_velez_api_velez_api_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssembleConfig_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssembleConfig_Request) ProtoMessage() {}

func (x *AssembleConfig_Request) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssembleConfig_Request.ProtoReflect.Descriptor instead.
func (*AssembleConfig_Request) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{12, 0}
}

func (x *AssembleConfig_Request) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *AssembleConfig_Request) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type AssembleConfig_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        []byte                 `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssembleConfig_Response) Reset() {
	*x = AssembleConfig_Response{}
	mi := &file_velez_api_velez_api_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssembleConfig_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssembleConfig_Response) ProtoMessage() {}

func (x *AssembleConfig_Response) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssembleConfig_Response.ProtoReflect.Descriptor instead.
func (*AssembleConfig_Response) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{12, 1}
}

func (x *AssembleConfig_Response) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpgradeSmerd_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                 `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeSmerd_Request) Reset() {
	*x = UpgradeSmerd_Request{}
	mi := &file_velez_api_velez_api_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeSmerd_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeSmerd_Request) ProtoMessage() {}

func (x *UpgradeSmerd_Request) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeSmerd_Request.ProtoReflect.Descriptor instead.
func (*UpgradeSmerd_Request) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{13, 0}
}

func (x *UpgradeSmerd_Request) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpgradeSmerd_Request) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type UpgradeSmerd_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeSmerd_Response) Reset() {
	*x = UpgradeSmerd_Response{}
	mi := &file_velez_api_velez_api_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeSmerd_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeSmerd_Response) ProtoMessage() {}

func (x *UpgradeSmerd_Response) ProtoReflect() protoreflect.Message {
	mi := &file_velez_api_velez_api_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeSmerd_Response.ProtoReflect.Descriptor instead.
func (*UpgradeSmerd_Response) Descriptor() ([]byte, []int) {
	return file_velez_api_velez_api_proto_rawDescGZIP(), []int{13, 1}
}

var File_velez_api_velez_api_proto protoreflect.FileDescriptor

const file_velez_api_velez_api_proto_rawDesc = "" +
	"\n" +
	"\x19velez_api/velez_api.proto\x12\tvelez_api\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1capi/grpc/matreshka_api.proto\x1a\tnpm.proto\":\n" +
	"\aVersion\x1a\t\n" +
	"\aRequest\x1a$\n" +
	"\bResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"\xca\x01\n" +
	"\x04Port\x12.\n" +
	"\x13service_port_number\x18\x01 \x01(\rR\x11servicePortNumber\x124\n" +
	"\bprotocol\x18\x02 \x01(\x0e2\x18.velez_api.Port.ProtocolR\bprotocol\x12\"\n" +
	"\n" +
	"exposed_to\x18\x03 \x01(\rH\x00R\texposedTo\x88\x01\x01\")\n" +
	"\bProtocol\x12\v\n" +
	"\aunknown\x10\x00\x12\a\n" +
	"\x03tcp\x10\x01\x12\a\n" +
	"\x03udp\x10\x02B\r\n" +
	"\v_exposed_to\"P\n" +
	"\x06Volume\x12\x1f\n" +
	"\vvolume_name\x18\x01 \x01(\tR\n" +
	"volumeName\x12%\n" +
	"\x0econtainer_path\x18\x02 \x01(\tR\rcontainerPath\"J\n" +
	"\x04Bind\x12\x1b\n" +
	"\thost_path\x18\x01 \x01(\tR\bhostPath\x12%\n" +
	"\x0econtainer_path\x18\x02 \x01(\tR\rcontainerPath\"J\n" +
	"\vNetworkBind\x12!\n" +
	"\fnetwork_name\x18\x01 \x01(\tR\vnetworkName\x12\x18\n" +
	"\aaliases\x18\x02 \x03(\tR\aaliases\"\xa0\x01\n" +
	"\x05Image\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\x124\n" +
	"\x06labels\x18\x03 \x03(\v2\x1c.velez_api.Image.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb0\x05\n" +
	"\x05Smerd\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"image_name\x18\x03 \x01(\tR\timageName\x12%\n" +
	"\x05ports\x18\x04 \x03(\v2\x0f.velez_api.PortR\x05ports\x12+\n" +
	"\avolumes\x18\x05 \x03(\v2\x11.velez_api.VolumeR\avolumes\x12/\n" +
	"\x06status\x18\x06 \x01(\x0e2\x17.velez_api.Smerd.StatusR\x06status\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x122\n" +
	"\bnetworks\x18\b \x03(\v2\x16.velez_api.NetworkBindR\bnetworks\x124\n" +
	"\x06labels\x18\t \x03(\v2\x1c.velez_api.Smerd.LabelsEntryR\x06labels\x12+\n" +
	"\x03env\x18\n" +
	" \x03(\v2\x19.velez_api.Smerd.EnvEntryR\x03env\x12%\n" +
	"\x05binds\x18\v \x03(\v2\x0f.velez_api.BindR\x05binds\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"o\n" +
	"\x06Status\x12\v\n" +
	"\aunknown\x10\x00\x12\v\n" +
	"\acreated\x10\x01\x12\x0e\n" +
	"\n" +
	"restarting\x10\x02\x12\v\n" +
	"\arunning\x10\x03\x12\f\n" +
	"\bremoving\x10\x04\x12\n" +
	"\n" +
	"\x06paused\x10\x05\x12\n" +
	"\n" +
	"\x06exited\x10\x06\x12\b\n" +
	"\x04dead\x10\a\"\xa7\x04\n" +
	"\tContainer\x1a\xa2\x01\n" +
	"\bHardware\x12\"\n" +
	"\n" +
	"cpu_amount\x18\x01 \x01(\x02H\x00R\tcpuAmount\x88\x01\x01\x12\x1a\n" +
	"\x06ram_mb\x18\x02 \x01(\rH\x01R\x05ramMb\x88\x01\x01\x12)\n" +
	"\x0ememory_swap_mb\x18\x03 \x01(\rH\x02R\fmemorySwapMb\x88\x01\x01B\r\n" +
	"\v_cpu_amountB\t\n" +
	"\a_ram_mbB\x11\n" +
	"\x0f_memory_swap_mb\x1a\xb7\x01\n" +
	"\bSettings\x12%\n" +
	"\x05ports\x18\x01 \x03(\v2\x0f.velez_api.PortR\x05ports\x120\n" +
	"\anetwork\x18\x02 \x03(\v2\x16.velez_api.NetworkBindR\anetwork\x12+\n" +
	"\avolumes\x18\x03 \x03(\v2\x11.velez_api.VolumeR\avolumes\x12%\n" +
	"\x05binds\x18\x04 \x03(\v2\x0f.velez_api.BindR\x05binds\x1a\xba\x01\n" +
	"\vHealthcheck\x12\x1d\n" +
	"\acommand\x18\x01 \x01(\tH\x00R\acommand\x88\x01\x01\x12'\n" +
	"\x0finterval_second\x18\x02 \x01(\rR\x0eintervalSecond\x12*\n" +
	"\x0etimeout_second\x18\x03 \x01(\rH\x01R\rtimeoutSecond\x88\x01\x01\x12\x18\n" +
	"\aretries\x18\x04 \x01(\rR\aretriesB\n" +
	"\n" +
	"\b_commandB\x11\n" +
	"\x0f_timeout_second\"\xf7\x06\n" +
	"\vCreateSmerd\x1a\xe7\x06\n" +
	"\aRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"image_name\x18\x02 \x01(\tR\timageName\x12>\n" +
	"\bhardware\x18\x03 \x01(\v2\x1d.velez_api.Container.HardwareH\x00R\bhardware\x88\x01\x01\x12>\n" +
	"\bsettings\x18\x04 \x01(\v2\x1d.velez_api.Container.SettingsH\x01R\bsettings\x88\x01\x01\x12\x1d\n" +
	"\acommand\x18\x05 \x01(\tH\x02R\acommand\x88\x01\x01\x129\n" +
	"\x03env\x18\x06 \x03(\v2'.velez_api.CreateSmerd.Request.EnvEntryR\x03env\x12G\n" +
	"\vhealthcheck\x18\a \x01(\v2 .velez_api.Container.HealthcheckH\x03R\vhealthcheck\x88\x01\x01\x12B\n" +
	"\x06labels\x18\b \x03(\v2*.velez_api.CreateSmerd.Request.LabelsEntryR\x06labels\x12#\n" +
	"\rignore_config\x18\t \x01(\bR\fignoreConfig\x12&\n" +
	"\x0fuse_image_ports\x18\n" +
	" \x01(\bR\ruseImagePorts\x12*\n" +
	"\x0econfig_version\x18\v \x01(\tH\x04R\rconfigVersion\x88\x01\x01\x12!\n" +
	"\fauto_upgrade\x18\f \x01(\bR\vautoUpgrade\x122\n" +
	"\arestart\x18\r \x01(\v2\x18.velez_api.RestartPolicyR\arestart\x126\n" +
	"\x06config\x18\x0e \x01(\v2\x1e.velez_api.MatreshkaConfigSpecR\x06config\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\v\n" +
	"\t_hardwareB\v\n" +
	"\t_settingsB\n" +
	"\n" +
	"\b_commandB\x0e\n" +
	"\f_healthcheckB\x11\n" +
	"\x0f_config_version\"\xab\x02\n" +
	"\n" +
	"ListSmerds\x1a\xe6\x01\n" +
	"\aRequest\x12\x19\n" +
	"\x05limit\x18\x01 \x01(\rH\x00R\x05limit\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x01R\x04name\x88\x01\x01\x12\x13\n" +
	"\x02id\x18\x03 \x01(\tH\x02R\x02id\x88\x01\x01\x12>\n" +
	"\x05label\x18\x04 \x03(\v2(.velez_api.ListSmerds.Request.LabelEntryR\x05label\x1a8\n" +
	"\n" +
	"LabelEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\b\n" +
	"\x06_limitB\a\n" +
	"\x05_nameB\x05\n" +
	"\x03_id\x1a4\n" +
	"\bResponse\x12(\n" +
	"\x06smerds\x18\x01 \x03(\v2\x10.velez_api.SmerdR\x06smerds\"\xdd\x01\n" +
	"\tDropSmerd\x1a3\n" +
	"\aRequest\x12\x14\n" +
	"\x05uuids\x18\x01 \x03(\tR\x05uuids\x12\x12\n" +
	"\x04name\x18\x02 \x03(\tR\x04name\x1a\x9a\x01\n" +
	"\bResponse\x12;\n" +
	"\x06failed\x18\x01 \x03(\v2#.velez_api.DropSmerd.Response.ErrorR\x06failed\x12\x1e\n" +
	"\n" +
	"successful\x18\x02 \x03(\tR\n" +
	"successful\x1a1\n" +
	"\x05Error\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x14\n" +
	"\x05cause\x18\x02 \x01(\tR\x05cause\"\xda\x02\n" +
	"\vGetHardware\x1a\t\n" +
	"\aRequest\x1a\xbf\x02\n" +
	"\bResponse\x127\n" +
	"\x03cpu\x18\x01 \x01(\v2%.velez_api.GetHardware.Response.ValueR\x03cpu\x12@\n" +
	"\bdisk_mem\x18\x02 \x01(\v2%.velez_api.GetHardware.Response.ValueR\adiskMem\x127\n" +
	"\x03ram\x18\x03 \x01(\v2%.velez_api.GetHardware.Response.ValueR\x03ram\x12'\n" +
	"\x0fports_available\x18\x04 \x03(\rR\x0eportsAvailable\x12%\n" +
	"\x0eports_occupied\x18\x05 \x03(\rR\rportsOccupied\x1a/\n" +
	"\x05Value\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x10\n" +
	"\x03err\x18\x02 \x01(\tR\x03err\"\x81\x01\n" +
	"\x0eAssembleConfig\x1aK\n" +
	"\aRequest\x12\x1d\n" +
	"\n" +
	"image_name\x18\x01 \x01(\tR\timageName\x12!\n" +
	"\fservice_name\x18\x02 \x01(\tR\vserviceName\x1a\"\n" +
	"\bResponse\x12\x16\n" +
	"\x06config\x18\x01 \x01(\fR\x06config\"O\n" +
	"\fUpgradeSmerd\x1a3\n" +
	"\aRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x02 \x01(\tR\x05image\x1a\n" +
	"\n" +
	"\bResponse\"{\n" +
	"\rRestartPolicy\x120\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1c.velez_api.RestartPolicyTypeR\x04type\x12'\n" +
	"\fFailureCount\x18\x02 \x01(\rH\x00R\fFailureCount\x88\x01\x01B\x0f\n" +
	"\r_FailureCount\"\x93\x02\n" +
	"\x13MatreshkaConfigSpec\x12$\n" +
	"\vconfig_name\x18\x01 \x01(\tH\x00R\n" +
	"configName\x88\x01\x01\x12*\n" +
	"\x0econfig_version\x18\x02 \x01(\tH\x01R\rconfigVersion\x88\x01\x01\x12?\n" +
	"\rconfig_format\x18\x03 \x01(\x0e2\x15.matreshka_api.FormatH\x02R\fconfigFormat\x88\x01\x01\x12$\n" +
	"\vsystem_path\x18\x04 \x01(\tH\x03R\n" +
	"systemPath\x88\x01\x01B\x0e\n" +
	"\f_config_nameB\x11\n" +
	"\x0f_config_versionB\x10\n" +
	"\x0e_config_formatB\x0e\n" +
	"\f_system_path*K\n" +
	"\x11RestartPolicyType\x12\x12\n" +
	"\x0eunless_stopped\x10\x00\x12\x06\n" +
	"\x02no\x10\x01\x12\n" +
	"\n" +
	"\x06always\x10\x02\x12\x0e\n" +
	"\n" +
	"on_failure\x10\x032\xe5\x05\n" +
	"\bVelezAPI\x12X\n" +
	"\aVersion\x12\x1a.velez_api.Version.Request\x1a\x1b.velez_api.Version.Response\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/api/version\x12]\n" +
	"\vCreateSmerd\x12\x1e.velez_api.CreateSmerd.Request\x1a\x10.velez_api.Smerd\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/api/smerd/create\x12g\n" +
	"\n" +
	"ListSmerds\x12\x1d.velez_api.ListSmerds.Request\x1a\x1e.velez_api.ListSmerds.Response\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/api/smerd/list\x12d\n" +
	"\tDropSmerd\x12\x1c.velez_api.DropSmerd.Request\x1a\x1d.velez_api.DropSmerd.Response\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/api/smerd/drop\x12e\n" +
	"\vGetHardware\x12\x1e.velez_api.GetHardware.Request\x1a\x1f.velez_api.GetHardware.Response\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/api/hardware\x12p\n" +
	"\fUpgradeSmerd\x12\x1f.velez_api.UpgradeSmerd.Request\x1a .velez_api.UpgradeSmerd.Response\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*\"\x12/api/smerd/upgrade\x12x\n" +
	"\x0eAssembleConfig\x12!.velez_api.AssembleConfig.Request\x1a\".velez_api.AssembleConfig.Response\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/api/config/assembleBC\x92\x82\x19\x10@vervstack/velezZ-go.vervstack.ru/velez/pkg/velez_api;velez_apib\x06proto3"

var (
	file_velez_api_velez_api_proto_rawDescOnce sync.Once
	file_velez_api_velez_api_proto_rawDescData []byte
)

func file_velez_api_velez_api_proto_rawDescGZIP() []byte {
	file_velez_api_velez_api_proto_rawDescOnce.Do(func() {
		file_velez_api_velez_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_velez_api_velez_api_proto_rawDesc), len(file_velez_api_velez_api_proto_rawDesc)))
	})
	return file_velez_api_velez_api_proto_rawDescData
}

var file_velez_api_velez_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_velez_api_velez_api_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_velez_api_velez_api_proto_goTypes = []any{
	(RestartPolicyType)(0),             // 0: velez_api.RestartPolicyType
	(Port_Protocol)(0),                 // 1: velez_api.Port.Protocol
	(Smerd_Status)(0),                  // 2: velez_api.Smerd.Status
	(*Version)(nil),                    // 3: velez_api.Version
	(*Port)(nil),                       // 4: velez_api.Port
	(*Volume)(nil),                     // 5: velez_api.Volume
	(*Bind)(nil),                       // 6: velez_api.Bind
	(*NetworkBind)(nil),                // 7: velez_api.NetworkBind
	(*Image)(nil),                      // 8: velez_api.Image
	(*Smerd)(nil),                      // 9: velez_api.Smerd
	(*Container)(nil),                  // 10: velez_api.Container
	(*CreateSmerd)(nil),                // 11: velez_api.CreateSmerd
	(*ListSmerds)(nil),                 // 12: velez_api.ListSmerds
	(*DropSmerd)(nil),                  // 13: velez_api.DropSmerd
	(*GetHardware)(nil),                // 14: velez_api.GetHardware
	(*AssembleConfig)(nil),             // 15: velez_api.AssembleConfig
	(*UpgradeSmerd)(nil),               // 16: velez_api.UpgradeSmerd
	(*RestartPolicy)(nil),              // 17: velez_api.RestartPolicy
	(*MatreshkaConfigSpec)(nil),        // 18: velez_api.MatreshkaConfigSpec
	(*Version_Request)(nil),            // 19: velez_api.Version.Request
	(*Version_Response)(nil),           // 20: velez_api.Version.Response
	nil,                                // 21: velez_api.Image.LabelsEntry
	nil,                                // 22: velez_api.Smerd.LabelsEntry
	nil,                                // 23: velez_api.Smerd.EnvEntry
	(*Container_Hardware)(nil),         // 24: velez_api.Container.Hardware
	(*Container_Settings)(nil),         // 25: velez_api.Container.Settings
	(*Container_Healthcheck)(nil),      // 26: velez_api.Container.Healthcheck
	(*CreateSmerd_Request)(nil),        // 27: velez_api.CreateSmerd.Request
	nil,                                // 28: velez_api.CreateSmerd.Request.EnvEntry
	nil,                                // 29: velez_api.CreateSmerd.Request.LabelsEntry
	(*ListSmerds_Request)(nil),         // 30: velez_api.ListSmerds.Request
	(*ListSmerds_Response)(nil),        // 31: velez_api.ListSmerds.Response
	nil,                                // 32: velez_api.ListSmerds.Request.LabelEntry
	(*DropSmerd_Request)(nil),          // 33: velez_api.DropSmerd.Request
	(*DropSmerd_Response)(nil),         // 34: velez_api.DropSmerd.Response
	(*DropSmerd_Response_Error)(nil),   // 35: velez_api.DropSmerd.Response.Error
	(*GetHardware_Request)(nil),        // 36: velez_api.GetHardware.Request
	(*GetHardware_Response)(nil),       // 37: velez_api.GetHardware.Response
	(*GetHardware_Response_Value)(nil), // 38: velez_api.GetHardware.Response.Value
	(*AssembleConfig_Request)(nil),     // 39: velez_api.AssembleConfig.Request
	(*AssembleConfig_Response)(nil),    // 40: velez_api.AssembleConfig.Response
	(*UpgradeSmerd_Request)(nil),       // 41: velez_api.UpgradeSmerd.Request
	(*UpgradeSmerd_Response)(nil),      // 42: velez_api.UpgradeSmerd.Response
	(*timestamppb.Timestamp)(nil),      // 43: google.protobuf.Timestamp
	(matreshka_api.Format)(0),          // 44: matreshka_api.Format
}
var file_velez_api_velez_api_proto_depIdxs = []int32{
	1,  // 0: velez_api.Port.protocol:type_name -> velez_api.Port.Protocol
	21, // 1: velez_api.Image.labels:type_name -> velez_api.Image.LabelsEntry
	4,  // 2: velez_api.Smerd.ports:type_name -> velez_api.Port
	5,  // 3: velez_api.Smerd.volumes:type_name -> velez_api.Volume
	2,  // 4: velez_api.Smerd.status:type_name -> velez_api.Smerd.Status
	43, // 5: velez_api.Smerd.created_at:type_name -> google.protobuf.Timestamp
	7,  // 6: velez_api.Smerd.networks:type_name -> velez_api.NetworkBind
	22, // 7: velez_api.Smerd.labels:type_name -> velez_api.Smerd.LabelsEntry
	23, // 8: velez_api.Smerd.env:type_name -> velez_api.Smerd.EnvEntry
	6,  // 9: velez_api.Smerd.binds:type_name -> velez_api.Bind
	0,  // 10: velez_api.RestartPolicy.type:type_name -> velez_api.RestartPolicyType
	44, // 11: velez_api.MatreshkaConfigSpec.config_format:type_name -> matreshka_api.Format
	4,  // 12: velez_api.Container.Settings.ports:type_name -> velez_api.Port
	7,  // 13: velez_api.Container.Settings.network:type_name -> velez_api.NetworkBind
	5,  // 14: velez_api.Container.Settings.volumes:type_name -> velez_api.Volume
	6,  // 15: velez_api.Container.Settings.binds:type_name -> velez_api.Bind
	24, // 16: velez_api.CreateSmerd.Request.hardware:type_name -> velez_api.Container.Hardware
	25, // 17: velez_api.CreateSmerd.Request.settings:type_name -> velez_api.Container.Settings
	28, // 18: velez_api.CreateSmerd.Request.env:type_name -> velez_api.CreateSmerd.Request.EnvEntry
	26, // 19: velez_api.CreateSmerd.Request.healthcheck:type_name -> velez_api.Container.Healthcheck
	29, // 20: velez_api.CreateSmerd.Request.labels:type_name -> velez_api.CreateSmerd.Request.LabelsEntry
	17, // 21: velez_api.CreateSmerd.Request.restart:type_name -> velez_api.RestartPolicy
	18, // 22: velez_api.CreateSmerd.Request.config:type_name -> velez_api.MatreshkaConfigSpec
	32, // 23: velez_api.ListSmerds.Request.label:type_name -> velez_api.ListSmerds.Request.LabelEntry
	9,  // 24: velez_api.ListSmerds.Response.smerds:type_name -> velez_api.Smerd
	35, // 25: velez_api.DropSmerd.Response.failed:type_name -> velez_api.DropSmerd.Response.Error
	38, // 26: velez_api.GetHardware.Response.cpu:type_name -> velez_api.GetHardware.Response.Value
	38, // 27: velez_api.GetHardware.Response.disk_mem:type_name -> velez_api.GetHardware.Response.Value
	38, // 28: velez_api.GetHardware.Response.ram:type_name -> velez_api.GetHardware.Response.Value
	19, // 29: velez_api.VelezAPI.Version:input_type -> velez_api.Version.Request
	27, // 30: velez_api.VelezAPI.CreateSmerd:input_type -> velez_api.CreateSmerd.Request
	30, // 31: velez_api.VelezAPI.ListSmerds:input_type -> velez_api.ListSmerds.Request
	33, // 32: velez_api.VelezAPI.DropSmerd:input_type -> velez_api.DropSmerd.Request
	36, // 33: velez_api.VelezAPI.GetHardware:input_type -> velez_api.GetHardware.Request
	41, // 34: velez_api.VelezAPI.UpgradeSmerd:input_type -> velez_api.UpgradeSmerd.Request
	39, // 35: velez_api.VelezAPI.AssembleConfig:input_type -> velez_api.AssembleConfig.Request
	20, // 36: velez_api.VelezAPI.Version:output_type -> velez_api.Version.Response
	9,  // 37: velez_api.VelezAPI.CreateSmerd:output_type -> velez_api.Smerd
	31, // 38: velez_api.VelezAPI.ListSmerds:output_type -> velez_api.ListSmerds.Response
	34, // 39: velez_api.VelezAPI.DropSmerd:output_type -> velez_api.DropSmerd.Response
	37, // 40: velez_api.VelezAPI.GetHardware:output_type -> velez_api.GetHardware.Response
	42, // 41: velez_api.VelezAPI.UpgradeSmerd:output_type -> velez_api.UpgradeSmerd.Response
	40, // 42: velez_api.VelezAPI.AssembleConfig:output_type -> velez_api.AssembleConfig.Response
	36, // [36:43] is the sub-list for method output_type
	29, // [29:36] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_velez_api_velez_api_proto_init() }
func file_velez_api_velez_api_proto_init() {
	if File_velez_api_velez_api_proto != nil {
		return
	}
	file_velez_api_velez_api_proto_msgTypes[1].OneofWrappers = []any{}
	file_velez_api_velez_api_proto_msgTypes[14].OneofWrappers = []any{}
	file_velez_api_velez_api_proto_msgTypes[15].OneofWrappers = []any{}
	file_velez_api_velez_api_proto_msgTypes[21].OneofWrappers = []any{}
	file_velez_api_velez_api_proto_msgTypes[23].OneofWrappers = []any{}
	file_velez_api_velez_api_proto_msgTypes[24].OneofWrappers = []any{}
	file_velez_api_velez_api_proto_msgTypes[27].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_velez_api_velez_api_proto_rawDesc), len(file_velez_api_velez_api_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_velez_api_velez_api_proto_goTypes,
		DependencyIndexes: file_velez_api_velez_api_proto_depIdxs,
		EnumInfos:         file_velez_api_velez_api_proto_enumTypes,
		MessageInfos:      file_velez_api_velez_api_proto_msgTypes,
	}.Build()
	File_velez_api_velez_api_proto = out.File
	file_velez_api_velez_api_proto_goTypes = nil
	file_velez_api_velez_api_proto_depIdxs = nil
}
